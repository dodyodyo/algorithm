# 파이썬에서는 immutable객체와 mutable 객체가 있다. immutable  객체는 값을 바꿀 수 없는 객체이다. 만약 값이 바뀌면 다른 메모리 공간을 할당하여 주소값도 바꿔줘야 한다. 반면 mutable 객체는 주소값이 동일하더라도 그 안의 값을 바꿀 수 있는 객체이다.

# 얕은 복사는 대입(=), [:] 슬라이싱, 객체.copy, copy.copy 가 있고 깊은 복사는 copy.deepcopy 가 있다.

# 얕은 복사는 객체의 주소값만 복사하는 것을 말한다. 객체의 주소값을 복사하기 때문에, 복사 대상의 값이 바뀌면 복사한 값도 바뀐다. 결과적으로 두 변수 간 독립성이 성립되지 않게 된다.

# mutable 객체일때
a = [1, 2, 3]
b = a
print(a, b)  # [1, 2, 3] [1, 2, 3]
print(id(a), id(b))  # 1542255299392 1542255299392

a[0] = 9999
print(a, b)  # [9999, 2, 3] [9999, 2, 3]
print(id(a), id(b))  # 1542255299392 1542255299392

# immutable 객체일때
int_a = 10
int_b = int_a
print(int_a, int_b)  # 10 10
print(id(int_a), id(int_b))  # 140722480104520 140722480104520

int_a += 5
print(int_a, int_b)  # 15 10
print(id(int_a), id(int_b))  # 140722480104680 140722480104520


# copy를 import해서 함수를 사용하면 대입한 변수의 주소값이 달라진다.

import copy

a = [1, 2, 3]
b = [1, 2]

print(id(a), id(b))  # 2066656420032 2066654447744
b = copy.copy(a)
print(id(a), id(b))  # 2066656420032 2066654447360


#깊은 복사는 다른 메모리 공간에 값을 복사함으로써, mutable 객체의 독립성을 유지해 주는 역할을 한다. a를 b에 깊은 복사하는 순간, b의 주솟값이 바뀌면서 독립성을 보장할 수 있다.


import copy

a = [1, 2, 3]
b = [123, 125, 5, 43, 4]
print(id(a), id(b))  # 2128856899904 2128856827008

b = copy.deepcopy(a)
print(a, b)  # [1, 2, 3] [1, 2, 3]
print(id(a), id(b))  # 2128856899904 2128855064704

a[0] = 9999
print(a, b)  # [9999, 2, 3] [1, 2, 3]
print(id(a), id(b))  # 2128856899904 2128855064704
